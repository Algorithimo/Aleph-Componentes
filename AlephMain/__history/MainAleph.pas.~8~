unit MainAleph;

interface

uses
  System.SysUtils,
  System.Classes,
  FMX.Types,
  FMX.Controls,
  FMX.Controls.Presentation,
  FMX.StdCtrls,
  FMX.Objects,
  FMX.Forms,
  System.Generics.Collections;

type
  TRemSize = class(TPersistent)
  private
    FFontBase: Single;
    FREM: Single;
    procedure SetFontBase(const Value: Single);
    procedure SetREM(const Value: Single);
  public
    constructor Create (ABaseSize: Single);
    destructor Destroy; override;
    function ToPixels: Single;
  published
    property REM: Single  read FREM write SetREM;
    property FontBase: Single  read FFontBase write SetFontBase;
  end;

  TMainAleph = class(TControl)

  end;



implementation

{ TRemSize }



{ TRemSize }

constructor TREmSize.Create(ABaseSize: Single);
begin
  FFontBase := ABaseSize;
  FREM := 1; // Valor padrão de 1 rem
end;
destructor TREmSize.Destroy;
begin
  inherited Destroy;
end;
procedure TREmSize.SetREM(const Value: Single);
begin
  if FREM <> Value then
    FREM := Value;
end;
function TREmSize.ToPixels: Single;
begin
  Result := FREM * FFontBase;
end;

end.
